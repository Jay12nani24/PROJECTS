0# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mango.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import numpy as np
from PyQt5.QtWidgets import QLineEdit
from PyQt5.QtWidgets import QLabel
from sklearn.metrics import mean_squared_error
from sklearn.metrics import accuracy_score
import math
from sklearn.metrics import mean_squared_error, mean_absolute_error


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1035, 653)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(490, 40, 431, 31))
        self.label.setObjectName("label")
        self.year = QtWidgets.QLabel(self.centralwidget)
        self.year.setGeometry(QtCore.QRect(380, 90, 131, 31))
        self.year.setObjectName("year")
        self.location = QtWidgets.QLabel(self.centralwidget)
        self.location.setGeometry(QtCore.QRect(380, 130, 131, 31))
        self.location.setObjectName("location")
        self.veriety = QtWidgets.QLabel(self.centralwidget)
        self.veriety.setGeometry(QtCore.QRect(380, 170, 131, 31))
        self.veriety.setObjectName("veriety")
        self.trees = QtWidgets.QLabel(self.centralwidget)
        self.trees.setGeometry(QtCore.QRect(380, 210, 131, 31))
        self.trees.setObjectName("trees")
        self.age = QtWidgets.QLabel(self.centralwidget)
        self.age.setGeometry(QtCore.QRect(380, 250, 131, 31))
        self.age.setObjectName("age")
        self.soil = QtWidgets.QLabel(self.centralwidget)
        self.soil.setGeometry(QtCore.QRect(380, 290, 131, 31))
        self.soil.setObjectName("soil")
        self.temp = QtWidgets.QLabel(self.centralwidget)
        self.temp.setGeometry(QtCore.QRect(380, 330, 131, 31))
        self.temp.setObjectName("temp")
        self.pest = QtWidgets.QLabel(self.centralwidget)
        self.pest.setGeometry(QtCore.QRect(380, 370, 131, 31))
        self.pest.setObjectName("pest")
        self.fert = QtWidgets.QLabel(self.centralwidget)
        self.fert.setGeometry(QtCore.QRect(380, 410, 131, 31))
        self.fert.setObjectName("fert")
        self.harvest = QtWidgets.QLabel(self.centralwidget)
        self.harvest.setGeometry(QtCore.QRect(380, 450, 131, 31))
        self.harvest.setObjectName("harvest")
        self.year_input = QtWidgets.QLineEdit(self.centralwidget)
        self.year_input.setGeometry(QtCore.QRect(510, 100, 113, 20))
        self.year_input.setObjectName("year_input")
        self.ver_input = QtWidgets.QLineEdit(self.centralwidget)
        self.ver_input.setGeometry(QtCore.QRect(510, 180, 113, 20))
        self.ver_input.setObjectName("ver_input")
        self.temp_input = QtWidgets.QLineEdit(self.centralwidget)
        self.temp_input.setGeometry(QtCore.QRect(510, 330, 113, 20))
        self.temp_input.setObjectName("temp_input")
        self.time_input = QtWidgets.QLineEdit(self.centralwidget)
        self.time_input.setGeometry(QtCore.QRect(510, 450, 113, 20))
        self.time_input.setObjectName("time_input")
        self.loc_input = QtWidgets.QLineEdit(self.centralwidget)
        self.loc_input.setGeometry(QtCore.QRect(510, 140, 113, 20))
        self.loc_input.setObjectName("loc_input")
        self.soil_input = QtWidgets.QLineEdit(self.centralwidget)
        self.soil_input.setGeometry(QtCore.QRect(510, 300, 113, 20))
        self.soil_input.setObjectName("soil_input")
        self.age_input = QtWidgets.QLineEdit(self.centralwidget)
        self.age_input.setGeometry(QtCore.QRect(510, 260, 113, 20))
        self.age_input.setObjectName("age_input")
        self.tree_input = QtWidgets.QLineEdit(self.centralwidget)
        self.tree_input.setGeometry(QtCore.QRect(510, 220, 113, 20))
        self.tree_input.setObjectName("tree_input")
        self.pest_input = QtWidgets.QLineEdit(self.centralwidget)
        self.pest_input.setGeometry(QtCore.QRect(510, 370, 113, 20))
        self.pest_input.setObjectName("pest_input")
        self.fert_input = QtWidgets.QLineEdit(self.centralwidget)
        self.fert_input.setGeometry(QtCore.QRect(510, 410, 113, 20))
        self.fert_input.setObjectName("fert_input")
        self.predict = QtWidgets.QPushButton(self.centralwidget)
        self.predict.setGeometry(QtCore.QRect(460, 510, 101, 31))
        self.predict.setObjectName("predict")
        self.svm = QtWidgets.QLabel(self.centralwidget)
        self.svm.setGeometry(QtCore.QRect(700, 160, 261, 31))
        self.svm.setObjectName("svm")
        self.svm_output = QtWidgets.QLabel(self.centralwidget)
        self.svm_output.setGeometry(QtCore.QRect(720, 220, 121, 31))
        self.svm_output.setFrameShape(QtWidgets.QFrame.Box)
        self.svm_output.setText("")
        self.svm_output.setObjectName("svm_output")
        self.random = QtWidgets.QLabel(self.centralwidget)
        self.random.setGeometry(QtCore.QRect(690, 290, 261, 31))
        self.random.setObjectName("random")
        self.rf_output = QtWidgets.QLabel(self.centralwidget)
        self.rf_output.setGeometry(QtCore.QRect(720, 350, 121, 31))
        self.rf_output.setFrameShape(QtWidgets.QFrame.Box)
        self.rf_output.setText("")
        self.rf_output.setObjectName("rf_output")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1035, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.predict.clicked.connect(self.prediction)



    def prediction(self):
        dataset = pd.read_csv("C:\\Users\\Anbazhagan R\\Desktop\\MANGOYIELD PREDICTION\\MANGO\\mango_dataset.csv")
        print(dataset)


        x = dataset.iloc[:,:-1].values
        y = dataset.iloc[:,-1].values

        print(x)
        print(y)


        from sklearn.model_selection import train_test_split 
        x_train,x_test,y_train,y_test = train_test_split(x ,y, test_size = 0.30 ,random_state = 0)
        print("x_train=",x_train)
        print("x_test=",x_test)
        print("y_train=",y_train)
        print("y_test=",y_test)


        # SUPPORT VECTOR MACHINE REGRESSION
        from sklearn.svm import SVR
        regressor = SVR()
        regressor.fit(x_train, y_train)
        y_pred = regressor.predict(x_test)
        print(y_pred)

        svm = mean_absolute_error(y_test, y_pred)
        print("support vector machine learning accuracy level is = ",svm/10)



        from sklearn.ensemble import RandomForestRegressor  
        Regressor= RandomForestRegressor(n_estimators = 20)  
        Regressor.fit(x_train, y_train)
        y_pred1=Regressor.predict(x_test) #testing model
        print("y_pred",y_pred1)

        svm1 = mean_absolute_error(y_test, y_pred1)
        print("Random Forest Regressor learning accuracy level is = ",svm1/10)
        
        
       
        try:
            year = self.year_input.text()
            location = self.loc_input.text()
            veriety = self.ver_input.text()
            trees = self.tree_input.text()
            age = self.age_input.text()
            soil = self.soil_input.text()
            temp = self.temp_input.text()
            pest = self.pest_input.text()
            fert = self.fert_input.text()
            harvest = self.time_input.text()
            int(year)
            int(location)
            int(veriety)
            int(trees)
            int(age)
            int(soil)
            int(temp)
            int(pest)
            int(fert)
            int(harvest)

            
            a= regressor.predict([[year,location,veriety,trees,age,soil,temp,pest,fert,harvest]])
            print('Predicted new output value: %s' % (a))
            svm = a
            self.svm_output.setText(str(svm))

            a1 = Regressor.predict([[year,location,veriety,trees,age,soil,temp,pest,fert,harvest]])
            print('Predicted new output value: %s' % (a1))
            random = a
            self.rf_output.setText(str(random))

        except Exception as e:
            print(e)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">MANGO YIELD PREDICTION USING MACHINE LEARNING TECHNIQUES</span></p></body></html>"))
        self.year.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">YEAR</span></p></body></html>"))
        self.location.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">LOCATION</span></p></body></html>"))
        self.veriety.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">VERIETY</span></p></body></html>"))
        self.trees.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">NO . OF . TREES</span></p></body></html>"))
        self.age.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">TREE AGE</span></p></body></html>"))
        self.soil.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">SOIL TYPE</span></p></body></html>"))
        self.temp.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">TEMPREATURE</span></p></body></html>"))
        self.pest.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">PESTICIDES</span></p></body></html>"))
        self.fert.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">FERTILIZER</span></p></body></html>"))
        self.harvest.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">HARVEST TIME</span></p></body></html>"))
        self.predict.setText(_translate("MainWindow", "PREDICTION"))
        self.svm.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">SUPPORT VECTOR MACHINE </span></p></body></html>"))
        self.random.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:10pt; font-weight:600;\">RANDOM FOREST ALGORITHM</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
